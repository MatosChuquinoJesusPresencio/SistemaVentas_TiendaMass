
package Vista;

import Controlador.ControladorReporte;
import Modelo.Entidades.DetalleVenta;
import Modelo.Entidades.Venta;
import Modelo.Estructuras.ArregloDinamico;
import static Utilidades.GeneraraDatos.obtenerFecha;
import Utilidades.Mensajes;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.time.LocalDateTime;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Jesus
 */
public class PnlReporte extends javax.swing.JPanel {
    private FrmMenuPrincipal frmMenuPrincipal;
    private DefaultTableModel modeloTabla;
    private ControladorReporte conReporte;
    private ArregloDinamico<Venta> listaVentas;

    /**
     * Creates new form pnlContenido
     */
    public PnlReporte() {
        initComponents();
    }
    
    public ArregloDinamico<Venta> getListaMostrada(){return listaVentas;}
    
    public PnlReporte(FrmMenuPrincipal frmMenuPrincipal){
        initComponents();
        configurarRadioBotones();
        accionBotones();
        inicializarTabla();
        asignarBotonesPrincipales();
        agregarEventoClickFila();
        this.conReporte = new ControladorReporte(frmMenuPrincipal, this);
        this.frmMenuPrincipal = frmMenuPrincipal;
        addComponentListener(new java.awt.event.ComponentAdapter() {
            @Override
            public void componentShown(java.awt.event.ComponentEvent e){
                conReporte.cargarTablaReportes();
            }    
            @Override
            public void componentHidden(java.awt.event.ComponentEvent e){
                btnGrupoFiltrado.clearSelection();
                btnGrupoOpciones.clearSelection();
                reiniciarValores();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrupoFiltrado = new javax.swing.ButtonGroup();
        btnGrupoOpciones = new javax.swing.ButtonGroup();
        jspTablaVentas = new javax.swing.JScrollPane();
        tbleVentas = new javax.swing.JTable();
        lblInformacion = new javax.swing.JLabel();
        txtFechaDesde = new javax.swing.JTextField();
        txtFechaHasta = new javax.swing.JTextField();
        lblIngreseLaFecha = new javax.swing.JLabel();
        lblDesde = new javax.swing.JLabel();
        lblHasta = new javax.swing.JLabel();
        lblInfoVenta = new javax.swing.JLabel();
        rdBtnID = new javax.swing.JRadioButton();
        rdBtnMonto = new javax.swing.JRadioButton();
        rdBtnFecha = new javax.swing.JRadioButton();
        lblOpciones = new javax.swing.JLabel();
        rdBtnEntre = new javax.swing.JRadioButton();
        rdBtnMayor = new javax.swing.JRadioButton();
        rdBtnMenor = new javax.swing.JRadioButton();
        rdBtnIgual = new javax.swing.JRadioButton();
        txtDatoIngresado2 = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnRecargar = new javax.swing.JButton();
        lblEjemploFecha = new javax.swing.JLabel();
        txtDatoIngresado1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jscInforVenta = new javax.swing.JScrollPane();
        txtAreaInfoVenta = new javax.swing.JTextArea();
        lblFiltrar = new javax.swing.JLabel();
        btnExportar = new javax.swing.JButton();

        setBackground(new java.awt.Color(232, 232, 232));
        setPreferredSize(new java.awt.Dimension(850, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbleVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbleVentas.setRowHeight(35);
        jspTablaVentas.setViewportView(tbleVentas);

        add(jspTablaVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 530, 540));

        lblInformacion.setFont(new java.awt.Font("Verdana", 1, 17)); // NOI18N
        lblInformacion.setText("Ingrese el dato:");
        add(lblInformacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        txtFechaDesde.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        add(txtFechaDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 110, -1));

        txtFechaHasta.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        add(txtFechaHasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, 110, -1));

        lblIngreseLaFecha.setFont(new java.awt.Font("Verdana", 1, 17)); // NOI18N
        lblIngreseLaFecha.setText("Ingrese la Fecha:");
        add(lblIngreseLaFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        lblDesde.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        lblDesde.setText("Desde:");
        add(lblDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        lblHasta.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        lblHasta.setText("Hasta:");
        add(lblHasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, -1, -1));

        lblInfoVenta.setFont(new java.awt.Font("Verdana", 1, 17)); // NOI18N
        lblInfoVenta.setText("Informacion de la Venta:");
        add(lblInfoVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 260, -1, -1));

        rdBtnID.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        rdBtnID.setText("ID del Producto");
        add(rdBtnID, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, -1, -1));

        rdBtnMonto.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        rdBtnMonto.setText("Monto de Venta");
        add(rdBtnMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, -1, -1));

        rdBtnFecha.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        rdBtnFecha.setText("Fecha de Venta");
        add(rdBtnFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, -1, -1));

        lblOpciones.setFont(new java.awt.Font("Verdana", 1, 17)); // NOI18N
        lblOpciones.setText("Opciones:");
        add(lblOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, -1, -1));

        rdBtnEntre.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        rdBtnEntre.setText("Entre");
        add(rdBtnEntre, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 70, -1, -1));

        rdBtnMayor.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        rdBtnMayor.setText("Mayor");
        add(rdBtnMayor, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 100, -1, -1));

        rdBtnMenor.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        rdBtnMenor.setText("Menor");
        add(rdBtnMenor, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 160, -1, -1));

        rdBtnIgual.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        rdBtnIgual.setText("Igual");
        add(rdBtnIgual, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 130, -1, -1));

        txtDatoIngresado2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        add(txtDatoIngresado2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 110, -1));

        btnBuscar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 220, -1, -1));

        btnRecargar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnRecargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reiniciar.png"))); // NOI18N
        add(btnRecargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 220, -1, -1));

        lblEjemploFecha.setBackground(new java.awt.Color(255, 255, 255));
        lblEjemploFecha.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        lblEjemploFecha.setForeground(new java.awt.Color(153, 153, 153));
        lblEjemploFecha.setText("Ej: 25/03/1999");
        add(lblEjemploFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        txtDatoIngresado1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        add(txtDatoIngresado1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 110, -1));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        jLabel1.setText("Dato 1ยบ:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        jLabel2.setText("Dato 2ยบ:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        txtAreaInfoVenta.setEditable(false);
        txtAreaInfoVenta.setColumns(20);
        txtAreaInfoVenta.setRows(5);
        jscInforVenta.setViewportView(txtAreaInfoVenta);

        add(jscInforVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(574, 300, 250, 460));

        lblFiltrar.setFont(new java.awt.Font("Verdana", 1, 17)); // NOI18N
        lblFiltrar.setText("Filtrar por:");
        add(lblFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, -1, -1));

        btnExportar.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnExportar.setText("Exportar");
        add(btnExportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 220, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void configurarRadioBotones(){
        btnGrupoFiltrado.add(rdBtnID);
        btnGrupoFiltrado.add(rdBtnFecha);
        btnGrupoFiltrado.add(rdBtnMonto);
        
        btnGrupoOpciones.add(rdBtnIgual);
        btnGrupoOpciones.add(rdBtnMayor);
        btnGrupoOpciones.add(rdBtnMenor);
        btnGrupoOpciones.add(rdBtnEntre);
    }
    
    private void reiniciarValores(){
        txtDatoIngresado1.setText("");
        txtDatoIngresado2.setText("");
        txtFechaDesde.setText("");
        txtFechaHasta.setText("");
    }
    
    private void asignarBotonesPrincipales(){
        btnBuscar.addActionListener(e -> filtrar());
        btnRecargar.addActionListener(e -> {
            conReporte.cargarTablaReportes();
            reiniciarValores();
        });
        btnExportar.addActionListener(e -> conReporte.exportarReportePDF());
    }
    
    public void filtrar() {
        try {
            String opcion = obtenerOpcionSeleccionada();

            if (rdBtnFecha.isSelected()) {
                String txtDesde = txtFechaDesde.getText().trim();
                String txtHasta = txtFechaHasta.getText().trim();

                if (txtDesde.isEmpty() || (opcion.equals("entre") && txtHasta.isEmpty())) {
                    Mensajes.mostrarError(frmMenuPrincipal, "Faltan datos", "Debe ingresar la(s) fecha(s) requeridas");
                    return;
                }

                LocalDateTime desde = obtenerFecha(txtDesde);
                LocalDateTime hasta = opcion.equals("entre") ? obtenerFecha(txtHasta) : desde;

                if (desde == null || (opcion.equals("entre") && hasta == null)) {
                    Mensajes.mostrarError(frmMenuPrincipal, "Error", "Formato de fecha incorrecto");
                    return;
                }

                if (opcion.equals("entre") && desde.isAfter(hasta)) {
                    Mensajes.mostrarAd(frmMenuPrincipal, "Espera", "La fecha 'Desde' no puede ser mayor que 'Hasta'");
                    return;
                }

                conReporte.filtrarPorFechas(desde, hasta, opcion);
            }

            else if (rdBtnMonto.isSelected()) {
                String txt1 = txtDatoIngresado1.getText().trim();
                String txt2 = txtDatoIngresado2.getText().trim();

                if (txt1.isEmpty() || (opcion.equals("entre") && txt2.isEmpty())) {
                    Mensajes.mostrarError(frmMenuPrincipal, "Faltan datos", "Debe ingresar el/los valores necesarios");
                    return;
                }

                double valor1 = Double.parseDouble(txt1);
                double valor2 = opcion.equals("entre") ? Double.parseDouble(txt2) : valor1;

                if (opcion.equals("entre") && valor1 > valor2) {
                    Mensajes.mostrarAd(frmMenuPrincipal, "Espera", "El valor 1 no puede ser mayor que el valor 2");
                    return;
                }

                conReporte.filtrarPorTotal(valor1, valor2, opcion);
            }

            else if (rdBtnID.isSelected()) {
                String txtID = txtDatoIngresado1.getText().trim();

                if (txtID.isEmpty()) {
                    Mensajes.mostrarError(frmMenuPrincipal, "Faltan datos", "Debe ingresar un ID de producto");
                    return;
                }

                int idProducto = Integer.parseInt(txtID);
                conReporte.filtrarPorProducto(idProducto);
            }

            else {
                Mensajes.mostrarError(frmMenuPrincipal, "Espere", "Escoja una opciรณn de filtrado antes");
            }

        } catch (NumberFormatException e) {
            Mensajes.mostrarError(frmMenuPrincipal, "Error", "Error al aplicar filtro: " + e.getMessage());
        }
    }
    
    private void accionBotones(){
        rdBtnFecha.addActionListener(e -> actualizarTipoFiltro());
        rdBtnID.addActionListener(e -> actualizarTipoFiltro());
        rdBtnMonto.addActionListener(e -> actualizarTipoFiltro());
        rdBtnIgual.addActionListener(e -> actualizarOpcionFiltro());
        rdBtnMayor.addActionListener(e -> actualizarOpcionFiltro());
        rdBtnMenor.addActionListener(e -> actualizarOpcionFiltro());
        rdBtnEntre.addActionListener(e -> actualizarOpcionFiltro());
    }
    
    private void actualizarTipoFiltro() {
        boolean esID = rdBtnID.isSelected();

        if (esID) {
            rdBtnIgual.setSelected(true);
        }

        rdBtnIgual.setEnabled(true);
        rdBtnMayor.setEnabled(!esID);
        rdBtnMenor.setEnabled(!esID);
        rdBtnEntre.setEnabled(!esID);

        actualizarOpcionFiltro(); 
    }
    
    private String obtenerOpcionSeleccionada() {
        if (rdBtnEntre.isSelected()) return "entre";
        if (rdBtnMayor.isSelected()) return "mayor";
        if (rdBtnMenor.isSelected()) return "menor";
        if (rdBtnIgual.isSelected()) return "igual";
        return "";
    }

    private void actualizarOpcionFiltro() {
        boolean esFecha = rdBtnFecha.isSelected();
        boolean esID = rdBtnID.isSelected();
        boolean esMonto = !esFecha && !esID;

        boolean usarEntre = rdBtnEntre.isSelected(); 

        txtFechaDesde.setEnabled(esFecha);
        txtFechaHasta.setEnabled(esFecha && usarEntre);

        txtDatoIngresado1.setEnabled(esID || esMonto);
        txtDatoIngresado2.setEnabled(esMonto && usarEntre);

        if (esFecha) {
            txtDatoIngresado1.setEnabled(false);
            txtDatoIngresado2.setEnabled(false);
        }

        if (esID) {
            txtFechaDesde.setEnabled(false);
            txtFechaHasta.setEnabled(false);
            txtDatoIngresado2.setEnabled(false);
        }
    }

    private void agregarEventoClickFila() {
        tbleVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int filaSeleccionada = tbleVentas.getSelectedRow();
                if (filaSeleccionada >= 0 && filaSeleccionada < listaVentas.getDimension()) {
                    Venta ventaSeleccionada = listaVentas.get(filaSeleccionada);
                    mostrarDetallesVenta(ventaSeleccionada);
                }
            }
        });
    }
    
    private void mostrarDetallesVenta(Venta venta) {
        StringBuilder sb = new StringBuilder();
        sb.append("Nรบmero de Venta: ").append(venta.getNumeroVenta()).append("\n");
        sb.append("Fecha: ").append(venta.getFechaVenta()).append("\n");
        sb.append("Total: S/. ").append(venta.getTotalVenta()).append("\n");
        sb.append("Mรฉtodo de Pago: ").append(venta.getMetodoPago()).append("\n");
        sb.append("Cantidad de Productos: ").append(venta.numProductosPorVenta()).append("\n");
        sb.append("Detalles:\n");

        for (int i = 0; i < venta.getDetallesVentas().getDimension(); i++) {
            DetalleVenta detalleVenta = (DetalleVenta) venta.getDetallesVentas().get(i);
            sb.append("- ").append(detalleVenta.getIdProducto())
              .append(" | Cant: ").append(detalleVenta.getCantidad())
              .append(" | Precio: ").append(detalleVenta.getPrecioUnitario())
              .append(" | Subtotal: ").append( (double) detalleVenta.getSubTotal()).append("\n");
        }

        txtAreaInfoVenta.setText(sb.toString());
    }
    
    private void inicializarTabla(){
        String[] columnasTablaCarrito = {"Nยบ Venta", "Fecha", "T. Monto", "T. Productos", "Metodo Pago"};
        modeloTabla = new DefaultTableModel(columnasTablaCarrito, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        }; 
        tbleVentas.setModel(modeloTabla);
        tbleVentas.getTableHeader().setFont(new Font("Verdana", Font.BOLD, 12));
        tbleVentas.getTableHeader().setForeground(Color.BLACK);
        tbleVentas.getTableHeader().setPreferredSize(new Dimension(0, 45));
        tbleVentas.getTableHeader().setReorderingAllowed(false);
        tbleVentas.getTableHeader().setBackground(new Color(255, 255, 102));
        
        configurarColumnasReporte();
    }
    
    private void configurarColumnasReporte(){
        int[] anchos = {40, 60, 40, 120};
        for (int i = 0; i < anchos.length; i++){
            TableColumn columna = tbleVentas.getColumnModel().getColumn(i);
            columna.setPreferredWidth(anchos[i]);
            columna.setResizable(false);
        }
    }
    
    public void actualizarTablaReportes(ArregloDinamico<Venta> ventas){
        modeloTabla.setRowCount(0);
        listaVentas = new ArregloDinamico<>();
        for (int i = 0; i < ventas.getDimension(); i++){
            Venta venta = ventas.get(i);
            listaVentas.add(venta);
            modeloTabla.addRow(new Object[]{
                venta.getNumeroVenta(),
                venta.getTotalVenta(),
                venta.numProductosPorVenta(),
                venta.getMetodoPago(),
                venta.getFechaVenta()
            });
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnExportar;
    private javax.swing.ButtonGroup btnGrupoFiltrado;
    private javax.swing.ButtonGroup btnGrupoOpciones;
    private javax.swing.JButton btnRecargar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jscInforVenta;
    private javax.swing.JScrollPane jspTablaVentas;
    private javax.swing.JLabel lblDesde;
    private javax.swing.JLabel lblEjemploFecha;
    private javax.swing.JLabel lblFiltrar;
    private javax.swing.JLabel lblHasta;
    private javax.swing.JLabel lblInfoVenta;
    private javax.swing.JLabel lblInformacion;
    private javax.swing.JLabel lblIngreseLaFecha;
    private javax.swing.JLabel lblOpciones;
    private javax.swing.JRadioButton rdBtnEntre;
    private javax.swing.JRadioButton rdBtnFecha;
    private javax.swing.JRadioButton rdBtnID;
    private javax.swing.JRadioButton rdBtnIgual;
    private javax.swing.JRadioButton rdBtnMayor;
    private javax.swing.JRadioButton rdBtnMenor;
    private javax.swing.JRadioButton rdBtnMonto;
    private javax.swing.JTable tbleVentas;
    private javax.swing.JTextArea txtAreaInfoVenta;
    private javax.swing.JTextField txtDatoIngresado1;
    private javax.swing.JTextField txtDatoIngresado2;
    private javax.swing.JTextField txtFechaDesde;
    private javax.swing.JTextField txtFechaHasta;
    // End of variables declaration//GEN-END:variables
}
